{"version":3,"sources":["pages/maps/GoogleMaps/Default.js","pages/maps/GoogleMaps/Hybrid.js","pages/maps/GoogleMaps/LightStyle.js","pages/maps/GoogleMaps/DarkStyle.js","pages/maps/GoogleMaps/Streetview.js","pages/maps/GoogleMaps/Markers.js","pages/maps/GoogleMaps/index.js"],"names":["Default","getMapOptions","maps","fullscreenControl","mapTypeControl","mapTypeId","MapTypeId","ROADMAP","scaleControl","scrollwheel","streetViewControl","render","Card","CardHeader","CardTitle","tag","className","CardBody","style","height","width","options","bootstrapURLKeys","key","defaultCenter","props","center","defaultZoom","zoom","React","Component","defaultProps","lat","lng","Hybrid","HYBRID","LightStyle","styles","featureType","elementType","stylers","color","lightness","weight","visibility","saturation","DarkStyle","Streetview","apiIsLoaded","map","panorama","StreetViewPanorama","ReactDOM","findDOMNode","refs","position","pov","heading","pitch","visible","setStreetView","ref","onGoogleApiLoaded","yesIWantToUseGoogleMapApiInternals","Markers","renderMarkers","Marker","title","GoogleMaps","Container","fluid","Row","Col","lg"],"mappings":"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","file":"static/js/38.65a31f5b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\r\n\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\nclass Default extends React.Component {\r\n  static defaultProps = {\r\n    center: {\r\n      lat: 40.712784,\r\n      lng: -74.005941\r\n    },\r\n    zoom: 14\r\n  };\r\n\r\n  getMapOptions = maps => {\r\n    return {\r\n      fullscreenControl: true,\r\n      mapTypeControl: true,\r\n      mapTypeId: maps.MapTypeId.ROADMAP,\r\n      scaleControl: true,\r\n      scrollwheel: false,\r\n      streetViewControl: true\r\n    };\r\n  };\r\n\r\n  render = () => (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag=\"h5\">Default Map</CardTitle>\r\n        <h6 className=\"card-subtitle text-muted\">\r\n          Displays the default road map view.\r\n        </h6>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div style={{ height: 300, width: \"100%\" }}>\r\n          <GoogleMapReact\r\n            options={this.getMapOptions}\r\n            bootstrapURLKeys={{\r\n              key: \"AIzaSyA-aWrwgr64q4b3TEZwQ0lkHI4lZK-moM4\"\r\n            }}\r\n            defaultCenter={this.props.center}\r\n            defaultZoom={this.props.zoom}\r\n          />\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Default;\r\n","import React from \"react\";\r\nimport { Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\r\n\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\nclass Hybrid extends React.Component {\r\n  static defaultProps = {\r\n    center: {\r\n      lat: 40.712784,\r\n      lng: -74.005941\r\n    },\r\n    zoom: 14\r\n  };\r\n\r\n  getMapOptions = maps => {\r\n    return {\r\n      fullscreenControl: true,\r\n      mapTypeControl: true,\r\n      mapTypeId: maps.MapTypeId.HYBRID,\r\n      scaleControl: true,\r\n      scrollwheel: false,\r\n      streetViewControl: true\r\n    };\r\n  };\r\n\r\n  render = () => (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag=\"h5\">Hybrid Map</CardTitle>\r\n        <h6 className=\"card-subtitle text-muted\">\r\n          Displays a mixture of normal and satellite views.\r\n        </h6>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div style={{ height: 300, width: \"100%\" }}>\r\n          <GoogleMapReact\r\n            options={this.getMapOptions}\r\n            bootstrapURLKeys={{\r\n              key: \"AIzaSyA-aWrwgr64q4b3TEZwQ0lkHI4lZK-moM4\"\r\n            }}\r\n            defaultCenter={this.props.center}\r\n            defaultZoom={this.props.zoom}\r\n          />\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Hybrid;\r\n","import React from \"react\";\r\nimport { Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\r\n\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\nclass LightStyle extends React.Component {\r\n  static defaultProps = {\r\n    center: {\r\n      lat: 40.712784,\r\n      lng: -74.005941\r\n    },\r\n    zoom: 14\r\n  };\r\n\r\n  getMapOptions = () => {\r\n    return {\r\n      fullscreenControl: true,\r\n      mapTypeControl: true,\r\n      scaleControl: true,\r\n      scrollwheel: false,\r\n      streetViewControl: true,\r\n      styles: [\r\n        {\r\n          featureType: \"water\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#e9e9e9\"\r\n            },\r\n            {\r\n              lightness: 17\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"landscape\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#f5f5f5\"\r\n            },\r\n            {\r\n              lightness: 20\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"road.highway\",\r\n          elementType: \"geometry.fill\",\r\n          stylers: [\r\n            {\r\n              color: \"#ffffff\"\r\n            },\r\n            {\r\n              lightness: 17\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"road.highway\",\r\n          elementType: \"geometry.stroke\",\r\n          stylers: [\r\n            {\r\n              color: \"#ffffff\"\r\n            },\r\n            {\r\n              lightness: 29\r\n            },\r\n            {\r\n              weight: 0.2\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"road.arterial\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#ffffff\"\r\n            },\r\n            {\r\n              lightness: 18\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"road.local\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#ffffff\"\r\n            },\r\n            {\r\n              lightness: 16\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"poi\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#f5f5f5\"\r\n            },\r\n            {\r\n              lightness: 21\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"poi.park\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#dedede\"\r\n            },\r\n            {\r\n              lightness: 21\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          elementType: \"labels.text.stroke\",\r\n          stylers: [\r\n            {\r\n              visibility: \"on\"\r\n            },\r\n            {\r\n              color: \"#ffffff\"\r\n            },\r\n            {\r\n              lightness: 16\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          elementType: \"labels.text.fill\",\r\n          stylers: [\r\n            {\r\n              saturation: 36\r\n            },\r\n            {\r\n              color: \"#333333\"\r\n            },\r\n            {\r\n              lightness: 40\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          elementType: \"labels.icon\",\r\n          stylers: [\r\n            {\r\n              visibility: \"off\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"transit\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#f2f2f2\"\r\n            },\r\n            {\r\n              lightness: 19\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"administrative\",\r\n          elementType: \"geometry.fill\",\r\n          stylers: [\r\n            {\r\n              color: \"#fefefe\"\r\n            },\r\n            {\r\n              lightness: 20\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"administrative\",\r\n          elementType: \"geometry.stroke\",\r\n          stylers: [\r\n            {\r\n              color: \"#fefefe\"\r\n            },\r\n            {\r\n              lightness: 17\r\n            },\r\n            {\r\n              weight: 1.2\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  render = () => (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag=\"h5\">Light Style</CardTitle>\r\n        <h6 className=\"card-subtitle text-muted\">Light color scheme.</h6>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div style={{ height: 300, width: \"100%\" }}>\r\n          <GoogleMapReact\r\n            options={this.getMapOptions}\r\n            bootstrapURLKeys={{\r\n              key: \"AIzaSyA-aWrwgr64q4b3TEZwQ0lkHI4lZK-moM4\"\r\n            }}\r\n            defaultCenter={this.props.center}\r\n            defaultZoom={this.props.zoom}\r\n          />\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default LightStyle;\r\n","import React from \"react\";\r\nimport { Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\r\n\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\nclass DarkStyle extends React.Component {\r\n  static defaultProps = {\r\n    center: {\r\n      lat: 40.712784,\r\n      lng: -74.005941\r\n    },\r\n    zoom: 14\r\n  };\r\n\r\n  getMapOptions = () => {\r\n    return {\r\n      fullscreenControl: true,\r\n      mapTypeControl: true,\r\n      scaleControl: true,\r\n      scrollwheel: false,\r\n      streetViewControl: true,\r\n      styles: [\r\n        {\r\n          featureType: \"all\",\r\n          elementType: \"labels.text.fill\",\r\n          stylers: [\r\n            {\r\n              saturation: 36\r\n            },\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 40\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"all\",\r\n          elementType: \"labels.text.stroke\",\r\n          stylers: [\r\n            {\r\n              visibility: \"on\"\r\n            },\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 16\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"all\",\r\n          elementType: \"labels.icon\",\r\n          stylers: [\r\n            {\r\n              visibility: \"off\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"administrative\",\r\n          elementType: \"geometry.fill\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 20\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"administrative\",\r\n          elementType: \"geometry.stroke\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 17\r\n            },\r\n            {\r\n              weight: 1.2\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"landscape\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 20\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"poi\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 21\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"road.highway\",\r\n          elementType: \"geometry.fill\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 17\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"road.highway\",\r\n          elementType: \"geometry.stroke\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 29\r\n            },\r\n            {\r\n              weight: 0.2\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"road.arterial\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 18\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"road.local\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 16\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"transit\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 19\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          featureType: \"water\",\r\n          elementType: \"geometry\",\r\n          stylers: [\r\n            {\r\n              color: \"#000000\"\r\n            },\r\n            {\r\n              lightness: 17\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  render = () => (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag=\"h5\">Dark Style</CardTitle>\r\n        <h6 className=\"card-subtitle text-muted\">Dark color scheme.</h6>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div style={{ height: 300, width: \"100%\" }}>\r\n          <GoogleMapReact\r\n            options={this.getMapOptions}\r\n            bootstrapURLKeys={{\r\n              key: \"AIzaSyA-aWrwgr64q4b3TEZwQ0lkHI4lZK-moM4\"\r\n            }}\r\n            defaultCenter={this.props.center}\r\n            defaultZoom={this.props.zoom}\r\n          />\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default DarkStyle;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\r\n\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\nclass Streetview extends React.Component {\r\n  static defaultProps = {\r\n    center: {\r\n      lat: 40.712784,\r\n      lng: -74.005941\r\n    },\r\n    zoom: 14\r\n  };\r\n\r\n  getMapOptions = () => {\r\n    return {\r\n      fullscreenControl: true,\r\n      mapTypeControl: true,\r\n      scaleControl: true,\r\n      scrollwheel: false,\r\n      streetViewControl: true\r\n    };\r\n  };\r\n\r\n  apiIsLoaded = (map, maps) => {\r\n    if (map) {\r\n      const panorama = new maps.StreetViewPanorama(\r\n        ReactDOM.findDOMNode(this.refs.panorama),\r\n        {\r\n          position: {\r\n            lat: 42.345573,\r\n            lng: -71.098326\r\n          },\r\n          pov: {\r\n            heading: 160,\r\n            pitch: 0\r\n          },\r\n          visible: true\r\n        }\r\n      );\r\n      map.setStreetView(panorama);\r\n    }\r\n  };\r\n\r\n  render = () => (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag=\"h5\">Streetview</CardTitle>\r\n        <h6 className=\"card-subtitle text-muted\">\r\n          Panoramic 360 degree views from designated roads throughout its\r\n          coverage area.\r\n        </h6>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div style={{ height: 300, width: \"100%\" }}>\r\n          <GoogleMapReact\r\n            ref={\"panorama\"}\r\n            options={this.getMapOptions}\r\n            bootstrapURLKeys={{\r\n              key: \"AIzaSyA-aWrwgr64q4b3TEZwQ0lkHI4lZK-moM4\"\r\n            }}\r\n            defaultCenter={this.props.center}\r\n            defaultZoom={this.props.zoom}\r\n            onGoogleApiLoaded={({ map, maps }) => this.apiIsLoaded(map, maps)}\r\n            yesIWantToUseGoogleMapApiInternals={true}\r\n          />\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Streetview;\r\n","import React from \"react\";\r\nimport { Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\r\n\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\nclass Markers extends React.Component {\r\n  static defaultProps = {\r\n    center: {\r\n      lat: 40.712784,\r\n      lng: -74.005941\r\n    },\r\n    zoom: 14\r\n  };\r\n\r\n  getMapOptions = maps => {\r\n    return {\r\n      fullscreenControl: true,\r\n      mapTypeControl: true,\r\n      mapTypeId: maps.MapTypeId.ROADMAP,\r\n      scaleControl: true,\r\n      scrollwheel: false,\r\n      streetViewControl: true\r\n    };\r\n  };\r\n\r\n  renderMarkers(map, maps) {\r\n    new maps.Marker({\r\n      position: {\r\n        lat: 40.712784,\r\n        lng: -74.005941\r\n      },\r\n      map,\r\n      title: \"Hello World!\"\r\n    });\r\n  }\r\n\r\n  render = () => (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag=\"h5\">Markers</CardTitle>\r\n        <h6 className=\"card-subtitle text-muted\">\r\n          Identify a location on a map.\r\n        </h6>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div style={{ height: 300, width: \"100%\" }}>\r\n          <GoogleMapReact\r\n            options={this.getMapOptions}\r\n            bootstrapURLKeys={{\r\n              key: \"AIzaSyA-aWrwgr64q4b3TEZwQ0lkHI4lZK-moM4\"\r\n            }}\r\n            defaultCenter={this.props.center}\r\n            defaultZoom={this.props.zoom}\r\n            onGoogleApiLoaded={({ map, maps }) => this.renderMarkers(map, maps)}\r\n          />\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Markers;\r\n","import React from \"react\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\n\r\nimport Default from \"./Default\";\r\nimport Hybrid from \"./Hybrid\";\r\nimport LightStyle from \"./LightStyle\";\r\nimport DarkStyle from \"./DarkStyle\";\r\nimport Streetview from \"./Streetview\";\r\nimport Markers from \"./Markers\";\r\n\r\nconst GoogleMaps = () => (\r\n  <Container fluid className=\"p-0\">\r\n    <h1 className=\"h3 mb-3\">Google Maps</h1>\r\n\r\n    <Row>\r\n      <Col lg=\"6\">\r\n        <Default />\r\n      </Col>\r\n      <Col lg=\"6\">\r\n        <Hybrid />\r\n      </Col>\r\n      <Col lg=\"6\">\r\n        <LightStyle />\r\n      </Col>\r\n      <Col lg=\"6\">\r\n        <DarkStyle />\r\n      </Col>\r\n      <Col lg=\"6\">\r\n        <Streetview />\r\n      </Col>\r\n      <Col lg=\"6\">\r\n        <Markers />\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default GoogleMaps;\r\n"],"sourceRoot":""}