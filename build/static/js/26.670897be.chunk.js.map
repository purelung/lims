{"version":3,"sources":["pages/charts/Chartjs/Line.js","pages/charts/Chartjs/Bar.js","pages/charts/Chartjs/Doughnut.js","pages/charts/Chartjs/Pie.js","pages/charts/Chartjs/Radar.js","pages/charts/Chartjs/Polar.js","pages/charts/Chartjs/index.js"],"names":["connect","store","theme","currentTheme","data","labels","datasets","label","fill","backgroundColor","borderColor","primary","tertiary","borderDash","Card","CardHeader","CardTitle","tag","className","CardBody","options","maintainAspectRatio","legend","display","tooltips","intersect","hover","plugins","filler","propagate","scales","xAxes","reverse","gridLines","color","yAxes","ticks","stepSize","fontColor","hoverBackgroundColor","hoverBorderColor","barPercentage","categoryPercentage","stacked","success","warning","cutoutPercentage","danger","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","Chartjs","Container","fluid","Row","Col","lg","Line"],"mappings":"oOA2HeA,qBAAQ,SAACC,GAAD,MAAY,CACjCC,MAAOD,EAAMC,MAAMC,gBADNH,EArHG,SAAC,GAAe,IAAbE,EAAY,EAAZA,MACbE,EAAO,CACXC,OAAQ,CACN,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFC,SAAU,CACR,CACEC,MAAO,YACPC,MAAM,EACNC,gBAAiB,cACjBC,YAAaR,EAAMS,QACnBP,KAAM,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGJ,CACEG,MAAO,SACPC,MAAM,EACNC,gBAAiB,cACjBC,YAAaR,EAAMU,SACnBC,WAAY,CAAC,EAAG,GAChBT,KAAM,CACJ,IACA,IACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,SA+CR,OACE,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,IAAI,MAAf,kBACA,wBAAIC,UAAU,4BAAd,4BAEF,kBAACC,EAAA,EAAD,KACE,yBAAKD,UAAU,SACb,kBAAC,IAAD,CAAMd,KAAMA,EAAMgB,QAjDV,CACdC,qBAAqB,EACrBC,OAAQ,CACNC,SAAS,GAEXC,SAAU,CACRC,WAAW,GAEbC,MAAO,CACLD,WAAW,GAEbE,QAAS,CACPC,OAAQ,CACNC,WAAW,IAGfC,OAAQ,CACNC,MAAO,CACL,CACEC,SAAS,EACTC,UAAW,CACTC,MAAO,sBAIbC,MAAO,CACL,CACEC,MAAO,CACLC,SAAU,KAEZd,SAAS,EACTV,WAAY,CAAC,EAAG,GAChBoB,UAAW,CACTC,MAAO,gBACPI,UAAW,oBCTRtC,mBAAQ,SAAAC,GAAK,MAAK,CAC/BC,MAAOD,EAAMC,MAAMC,gBADNH,EAtFE,SAAC,GAAe,IAAbE,EAAY,EAAZA,MACZE,EAAO,CACXC,OAAQ,CACN,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFC,SAAU,CACR,CACEC,MAAO,YACPE,gBAAiBP,EAAMS,QACvBD,YAAaR,EAAMS,QACnB4B,qBAAsBrC,EAAMS,QAC5B6B,iBAAkBtC,EAAMS,QACxBP,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACnDqC,cAAe,IACfC,mBAAoB,IAEtB,CACEnC,MAAO,YACPE,gBAAiB,UACjBC,YAAa,UACb6B,qBAAsB,UACtBC,iBAAkB,UAClBpC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACnDqC,cAAe,IACfC,mBAAoB,MAiC1B,OACE,kBAAC5B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,IAAI,MAAf,aACA,wBAAIC,UAAU,4BAAd,oFAKF,kBAACC,EAAA,EAAD,KACE,yBAAKD,UAAU,SACb,kBAAC,IAAD,CAAKd,KAAMA,EAAMgB,QAvCT,CACdC,qBAAqB,EACrBC,OAAQ,CACNC,SAAS,GAEXO,OAAQ,CACNK,MAAO,CACL,CACEF,UAAW,CACTV,SAAS,GAEXoB,SAAS,EACTP,MAAO,CACLC,SAAU,MAIhBN,MAAO,CACL,CACEY,SAAS,EACTV,UAAW,CACTC,MAAO,2BClBJlC,mBAAQ,SAAAC,GAAK,MAAK,CAC/BC,MAAOD,EAAMC,MAAMC,gBADNH,EA3CO,SAAC,GAAe,IAAbE,EAAY,EAAZA,MACjBE,EAAO,CACXC,OAAQ,CAAC,SAAU,iBAAkB,SAAU,SAC/CC,SAAU,CACR,CACEF,KAAM,CAAC,IAAK,IAAK,GAAI,KACrBK,gBAAiB,CACfP,EAAMS,QACNT,EAAM0C,QACN1C,EAAM2C,QACN,WAEFnC,YAAa,iBAanB,OACE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,IAAI,MAAf,kBACA,wBAAIC,UAAU,4BAAd,sFAKF,kBAACC,EAAA,EAAD,KACE,yBAAKD,UAAU,kBACb,kBAAC,IAAD,CAAUd,KAAMA,EAAMgB,QAnBd,CACdC,qBAAqB,EACrByB,iBAAkB,GAClBxB,OAAQ,CACNC,SAAS,YCqBAvB,mBAAQ,SAAAC,GAAK,MAAK,CAC/BC,MAAOD,EAAMC,MAAMC,gBADNH,EA1CE,SAAC,GAAe,IAAbE,EAAY,EAAZA,MACZE,EAAO,CACXC,OAAQ,CAAC,SAAU,iBAAkB,SAAU,SAC/CC,SAAU,CACR,CACEF,KAAM,CAAC,IAAK,IAAK,GAAI,KACrBK,gBAAiB,CACfP,EAAMS,QACNT,EAAM2C,QACN3C,EAAM6C,OACN,WAEFrC,YAAa,iBAYnB,OACE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,IAAI,MAAf,aACA,wBAAIC,UAAU,4BAAd,iFAKF,kBAACC,EAAA,EAAD,KACE,yBAAKD,UAAU,kBACb,kBAAC,IAAD,CAAKd,KAAMA,EAAMgB,QAlBT,CACdC,qBAAqB,EACrBC,OAAQ,CACNC,SAAS,YC2BAvB,mBAAQ,SAAAC,GAAK,MAAK,CAC/BC,MAAOD,EAAMC,MAAMC,gBADNH,EA/CI,SAAC,GAAe,IAAbE,EAAY,EAAZA,MACdE,EAAO,CACXC,OAAQ,CAAC,QAAS,cAAe,UAAW,SAAU,cACtDC,SAAU,CACR,CACEC,MAAO,UACPE,gBAAiB,yBACjBC,YAAaR,EAAMS,QACnBqC,qBAAsB9C,EAAMS,QAC5BsC,iBAAkB,OAClBC,0BAA2B,OAC3BC,sBAAuBjD,EAAMS,QAC7BP,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,KAEzB,CACEG,MAAO,UACPE,gBAAiB,yBACjBC,YAAaR,EAAM6C,OACnBC,qBAAsB9C,EAAM6C,OAC5BE,iBAAkB,OAClBC,0BAA2B,OAC3BC,sBAAuBjD,EAAM6C,OAC7B3C,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,OAO7B,OACE,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,IAAI,MAAf,eACA,wBAAIC,UAAU,4BAAd,2FAKF,kBAACC,EAAA,EAAD,KACE,yBAAKD,UAAU,SACb,kBAAC,IAAD,CAAOd,KAAMA,EAAMgB,QAbX,CAAEC,qBAAqB,WCW1BrB,mBAAQ,SAAAC,GAAK,MAAK,CAC/BC,MAAOD,EAAMC,MAAMC,gBADNH,EAtCI,SAAC,GAAe,IAAbE,EAAY,EAAZA,MACdE,EAAO,CACXC,OAAQ,CAAC,QAAS,cAAe,UAAW,SAAU,cACtDC,SAAU,CACR,CACEC,MAAO,UACPH,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,IACvBK,gBAAiB,CACfP,EAAMS,QACNT,EAAM0C,QACN1C,EAAM6C,OACN7C,EAAM2C,QACN,cAQR,OACE,kBAAC/B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,IAAI,MAAf,oBACA,wBAAIC,UAAU,4BAAd,sFAKF,kBAACC,EAAA,EAAD,KACE,yBAAKD,UAAU,SACb,kBAAC,IAAD,CAAOd,KAAMA,EAAMgB,QAbX,CAAEC,qBAAqB,WCc1B+B,UA3BC,kBACd,kBAACC,EAAA,EAAD,CAAWC,OAAK,EAACpC,UAAU,OACzB,wBAAIA,UAAU,WAAd,YAEA,kBAACqC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,kBAACC,EAAD","file":"static/js/26.670897be.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\r\n\r\nconst LineChart = ({ theme }) => {\r\n  const data = {\r\n    labels: [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ],\r\n    datasets: [\r\n      {\r\n        label: \"Sales ($)\",\r\n        fill: true,\r\n        backgroundColor: \"transparent\",\r\n        borderColor: theme.primary,\r\n        data: [\r\n          2115,\r\n          1562,\r\n          1584,\r\n          1892,\r\n          1487,\r\n          2223,\r\n          2966,\r\n          2448,\r\n          2905,\r\n          3838,\r\n          2917,\r\n          3327,\r\n        ],\r\n      },\r\n      {\r\n        label: \"Orders\",\r\n        fill: true,\r\n        backgroundColor: \"transparent\",\r\n        borderColor: theme.tertiary,\r\n        borderDash: [4, 4],\r\n        data: [\r\n          958,\r\n          724,\r\n          629,\r\n          883,\r\n          915,\r\n          1214,\r\n          1476,\r\n          1212,\r\n          1554,\r\n          2128,\r\n          1466,\r\n          1827,\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n    tooltips: {\r\n      intersect: false,\r\n    },\r\n    hover: {\r\n      intersect: true,\r\n    },\r\n    plugins: {\r\n      filler: {\r\n        propagate: false,\r\n      },\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          reverse: true,\r\n          gridLines: {\r\n            color: \"rgba(0,0,0,0.05)\",\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            stepSize: 500,\r\n          },\r\n          display: true,\r\n          borderDash: [5, 5],\r\n          gridLines: {\r\n            color: \"rgba(0,0,0,0)\",\r\n            fontColor: \"#fff\",\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag=\"h5\">Store Earnings</CardTitle>\r\n        <h6 className=\"card-subtitle text-muted\">Month by month earnings</h6>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className=\"chart\">\r\n          <Line data={data} options={options} />\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default connect((store) => ({\r\n  theme: store.theme.currentTheme,\r\n}))(LineChart);\r\n","import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\r\n\r\nconst BarChart = ({ theme }) => {\r\n  const data = {\r\n    labels: [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\"\r\n    ],\r\n    datasets: [\r\n      {\r\n        label: \"Last year\",\r\n        backgroundColor: theme.primary,\r\n        borderColor: theme.primary,\r\n        hoverBackgroundColor: theme.primary,\r\n        hoverBorderColor: theme.primary,\r\n        data: [54, 67, 41, 55, 62, 45, 55, 73, 60, 76, 48, 79],\r\n        barPercentage: 0.75,\r\n        categoryPercentage: 0.5\r\n      },\r\n      {\r\n        label: \"This year\",\r\n        backgroundColor: \"#E8EAED\",\r\n        borderColor: \"#E8EAED\",\r\n        hoverBackgroundColor: \"#E8EAED\",\r\n        hoverBorderColor: \"#E8EAED\",\r\n        data: [69, 66, 24, 48, 52, 51, 44, 53, 62, 79, 51, 68],\r\n        barPercentage: 0.75,\r\n        categoryPercentage: 0.5\r\n      }\r\n    ]\r\n  };\r\n\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false\r\n          },\r\n          stacked: false,\r\n          ticks: {\r\n            stepSize: 20\r\n          }\r\n        }\r\n      ],\r\n      xAxes: [\r\n        {\r\n          stacked: false,\r\n          gridLines: {\r\n            color: \"transparent\"\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag=\"h5\">Bar Chart</CardTitle>\r\n        <h6 className=\"card-subtitle text-muted\">\r\n          A bar chart provides a way of showing data values represented as\r\n          vertical bars.\r\n        </h6>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className=\"chart\">\r\n          <Bar data={data} options={options} />\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default connect(store => ({\r\n  theme: store.theme.currentTheme\r\n}))(BarChart);\r\n","import React from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\r\n\r\nconst DoughnutChart = ({ theme }) => {\r\n  const data = {\r\n    labels: [\"Social\", \"Search Engines\", \"Direct\", \"Other\"],\r\n    datasets: [\r\n      {\r\n        data: [260, 125, 54, 146],\r\n        backgroundColor: [\r\n          theme.primary,\r\n          theme.success,\r\n          theme.warning,\r\n          \"#E8EAED\"\r\n        ],\r\n        borderColor: \"transparent\"\r\n      }\r\n    ]\r\n  };\r\n\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    cutoutPercentage: 65,\r\n    legend: {\r\n      display: false\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag=\"h5\">Doughnut Chart</CardTitle>\r\n        <h6 className=\"card-subtitle text-muted\">\r\n          Doughnut charts are excellent at showing the relational proportions\r\n          between data.\r\n        </h6>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className=\"chart chart-sm\">\r\n          <Doughnut data={data} options={options} />\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default connect(store => ({\r\n  theme: store.theme.currentTheme\r\n}))(DoughnutChart);\r\n","import React from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\r\n\r\nconst PieChart = ({ theme }) => {\r\n  const data = {\r\n    labels: [\"Social\", \"Search Engines\", \"Direct\", \"Other\"],\r\n    datasets: [\r\n      {\r\n        data: [260, 125, 54, 146],\r\n        backgroundColor: [\r\n          theme.primary,\r\n          theme.warning,\r\n          theme.danger,\r\n          \"#E8EAED\"\r\n        ],\r\n        borderColor: \"transparent\"\r\n      }\r\n    ]\r\n  };\r\n\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag=\"h5\">Pie Chart</CardTitle>\r\n        <h6 className=\"card-subtitle text-muted\">\r\n          Pie charts are excellent at showing the relational proportions between\r\n          data.\r\n        </h6>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className=\"chart chart-sm\">\r\n          <Pie data={data} options={options} />\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default connect(store => ({\r\n  theme: store.theme.currentTheme\r\n}))(PieChart);\r\n","import React from \"react\";\r\nimport { Radar } from \"react-chartjs-2\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\r\n\r\nconst RadarChart = ({ theme }) => {\r\n  const data = {\r\n    labels: [\"Speed\", \"Reliability\", \"Comfort\", \"Safety\", \"Efficiency\"],\r\n    datasets: [\r\n      {\r\n        label: \"Model X\",\r\n        backgroundColor: \"rgba(0, 123, 255, 0.2)\",\r\n        borderColor: theme.primary,\r\n        pointBackgroundColor: theme.primary,\r\n        pointBorderColor: \"#fff\",\r\n        pointHoverBackgroundColor: \"#fff\",\r\n        pointHoverBorderColor: theme.primary,\r\n        data: [70, 53, 82, 60, 33]\r\n      },\r\n      {\r\n        label: \"Model S\",\r\n        backgroundColor: \"rgba(220, 53, 69, 0.2)\",\r\n        borderColor: theme.danger,\r\n        pointBackgroundColor: theme.danger,\r\n        pointBorderColor: \"#fff\",\r\n        pointHoverBackgroundColor: \"#fff\",\r\n        pointHoverBorderColor: theme.danger,\r\n        data: [35, 38, 65, 85, 84]\r\n      }\r\n    ]\r\n  };\r\n\r\n  const options = { maintainAspectRatio: false };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag=\"h5\">Radar Chart</CardTitle>\r\n        <h6 className=\"card-subtitle text-muted\">\r\n          A radar chart is a way of showing multiple data points and the\r\n          variation between them.\r\n        </h6>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className=\"chart\">\r\n          <Radar data={data} options={options} />\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default connect(store => ({\r\n  theme: store.theme.currentTheme\r\n}))(RadarChart);\r\n","import React from \"react\";\r\nimport { Polar } from \"react-chartjs-2\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\r\n\r\nconst PolarChart = ({ theme }) => {\r\n  const data = {\r\n    labels: [\"Speed\", \"Reliability\", \"Comfort\", \"Safety\", \"Efficiency\"],\r\n    datasets: [\r\n      {\r\n        label: \"Model S\",\r\n        data: [35, 38, 65, 70, 24],\r\n        backgroundColor: [\r\n          theme.primary,\r\n          theme.success,\r\n          theme.danger,\r\n          theme.warning,\r\n          \"#5b7dff\"\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n\r\n  const options = { maintainAspectRatio: false };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag=\"h5\">Polar Area Chart</CardTitle>\r\n        <h6 className=\"card-subtitle text-muted\">\r\n          Polar area charts are similar to pie charts, but each segment has the\r\n          same angle.\r\n        </h6>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className=\"chart\">\r\n          <Polar data={data} options={options} />\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default connect(store => ({\r\n  theme: store.theme.currentTheme\r\n}))(PolarChart);\r\n","import React from \"react\";\r\n\r\nimport { Col, Container, Row } from \"reactstrap\";\r\n\r\nimport Line from \"./Line\";\r\nimport Bar from \"./Bar\";\r\nimport Doughnut from \"./Doughnut\";\r\nimport Pie from \"./Pie\";\r\nimport Radar from \"./Radar\";\r\nimport Polar from \"./Polar\";\r\n\r\nconst Chartjs = () => (\r\n  <Container fluid className=\"p-0\">\r\n    <h1 className=\"h3 mb-3\">Earnings</h1>\r\n\r\n    <Row>\r\n      <Col lg=\"6\">\r\n        <Line />\r\n      </Col>\r\n      {/* <Col lg=\"6\">\r\n        <Bar />\r\n      </Col>\r\n      <Col lg=\"6\">\r\n        <Doughnut />\r\n      </Col>\r\n      <Col lg=\"6\">\r\n        <Pie />\r\n      </Col>\r\n      <Col lg=\"6\">\r\n        <Radar />\r\n      </Col>\r\n      <Col lg=\"6\">\r\n        <Polar />\r\n      </Col> */}\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default Chartjs;\r\n"],"sourceRoot":""}