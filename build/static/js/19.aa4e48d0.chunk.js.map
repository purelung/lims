{"version":3,"sources":["pages/forms/Layouts.js","../node_modules/reactstrap/es/FormText.js"],"names":["BasicForm","tag","className","type","name","placeholder","rows","color","id","label","HorizontalForm","row","sm","defaultChecked","disabled","size","offset","FormRow","form","md","InlineForm","inline","addonType","Layouts","fluid","lg","propTypes","children","PropTypes","node","bool","tagPropType","string","cssModule","object","FormText","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/19.aa4e48d0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardTitle,\r\n  Col,\r\n  Container,\r\n  CustomInput,\r\n  Form,\r\n  FormGroup,\r\n  FormText,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Label,\r\n  Row\r\n} from \"reactstrap\";\r\n\r\nconst BasicForm = () => (\r\n  <Card>\r\n    <CardHeader>\r\n      <CardTitle tag=\"h5\">Basic form</CardTitle>\r\n      <h6 className=\"card-subtitle text-muted\">\r\n        Default Bootstrap form layout.\r\n      </h6>\r\n    </CardHeader>\r\n    <CardBody>\r\n      <Form>\r\n        <FormGroup>\r\n          <Label>Email address</Label>\r\n          <Input type=\"email\" name=\"email\" placeholder=\"Email\" />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label>Password</Label>\r\n          <Input type=\"password\" name=\"password\" placeholder=\"Password\" />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label>Textarea</Label>\r\n          <Input\r\n            type=\"textarea\"\r\n            name=\"textarea\"\r\n            placeholder=\"Textarea\"\r\n            rows=\"1\"\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label>File input</Label>\r\n          <Input type=\"file\" name=\"file\" />\r\n          <FormText color=\"muted\">Example block-level help text here.</FormText>\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <CustomInput type=\"checkbox\" id=\"checkbox\" label=\"Check me out\" />\r\n        </FormGroup>\r\n\r\n        <Button color=\"primary\">Submit</Button>\r\n      </Form>\r\n    </CardBody>\r\n  </Card>\r\n);\r\n\r\nconst HorizontalForm = () => (\r\n  <Card>\r\n    <CardHeader>\r\n      <CardTitle tag=\"h5\">Horizontal form</CardTitle>\r\n      <h6 className=\"card-subtitle text-muted\">Horizontal Bootstrap layout.</h6>\r\n    </CardHeader>\r\n    <CardBody>\r\n      <Form>\r\n        <FormGroup row>\r\n          <Label sm={2} className=\"text-sm-right\">\r\n            Email\r\n          </Label>\r\n          <Col sm={10}>\r\n            <Input type=\"email\" name=\"email\" placeholder=\"Email\" />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label sm={2} className=\"text-sm-right\">\r\n            Password\r\n          </Label>\r\n          <Col sm={10}>\r\n            <Input type=\"password\" name=\"password\" placeholder=\"Password\" />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label sm={2} className=\"text-sm-right\">\r\n            Textarea\r\n          </Label>\r\n          <Col sm={10}>\r\n            <Input\r\n              type=\"textarea\"\r\n              name=\"textarea\"\r\n              placeholder=\"Textarea\"\r\n              rows=\"3\"\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label sm={2} className=\"text-sm-right pt-sm-0\">\r\n            Radios\r\n          </Label>\r\n          <Col sm={10}>\r\n            <div className=\"custom-controls-stacked\">\r\n              <CustomInput\r\n                type=\"radio\"\r\n                id=\"radio1\"\r\n                name=\"customRadio\"\r\n                label=\"Default radio\"\r\n                className=\"mb-2\"\r\n                defaultChecked\r\n              />\r\n              <CustomInput\r\n                type=\"radio\"\r\n                id=\"radio2\"\r\n                name=\"customRadio\"\r\n                label=\"Second default radio\"\r\n                className=\"mb-2\"\r\n              />\r\n              <CustomInput\r\n                type=\"radio\"\r\n                id=\"radio3\"\r\n                label=\"Disabled radio\"\r\n                disabled\r\n              />\r\n            </div>\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label sm={2} className=\"text-sm-right pt-sm-0\">\r\n            Checkbox\r\n          </Label>\r\n          <Col sm={10}>\r\n            <CustomInput\r\n              type=\"checkbox\"\r\n              id=\"checkbox\"\r\n              label=\"Check me out\"\r\n              disabled\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Col sm={{ size: 10, offset: 2 }}>\r\n            <Button color=\"primary\">Submit</Button>\r\n          </Col>\r\n        </FormGroup>\r\n      </Form>\r\n    </CardBody>\r\n  </Card>\r\n);\r\n\r\nconst FormRow = () => (\r\n  <Card>\r\n    <CardHeader>\r\n      <CardTitle tag=\"h5\">Form row</CardTitle>\r\n      <h6 className=\"card-subtitle text-muted\">Bootstrap column layout.</h6>\r\n    </CardHeader>\r\n    <CardBody>\r\n      <Form>\r\n        <Row form>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label>Email</Label>\r\n              <Input type=\"email\" name=\"email\" placeholder=\"Email\" />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label>Password</Label>\r\n              <Input type=\"password\" name=\"password\" placeholder=\"Password\" />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <FormGroup>\r\n          <Label>Address</Label>\r\n          <Input type=\"text\" name=\"address\" placeholder=\"1234 Main St\" />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label>Address 2</Label>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"address2\"\r\n            placeholder=\"Apartment, studio, or floor\"\r\n          />\r\n        </FormGroup>\r\n        <Row form>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label>City</Label>\r\n              <Input type=\"text\" name=\"city\" />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Label>State</Label>\r\n              <Input type=\"select\" name=\"state\">\r\n                <option />\r\n                <option>...</option>\r\n              </Input>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={2}>\r\n            <FormGroup>\r\n              <Label>Zip</Label>\r\n              <Input type=\"text\" name=\"zip\" />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <FormGroup>\r\n          <CustomInput\r\n            type=\"checkbox\"\r\n            id=\"checkbox\"\r\n            label=\"Check me out\"\r\n            disabled\r\n          />\r\n        </FormGroup>\r\n        <Button color=\"primary\">Submit</Button>\r\n      </Form>\r\n    </CardBody>\r\n  </Card>\r\n);\r\n\r\nconst InlineForm = () => (\r\n  <Card>\r\n    <CardHeader>\r\n      <CardTitle tag=\"h5\">Inline form</CardTitle>\r\n      <h6 className=\"card-subtitle text-muted\">Single horizontal row.</h6>\r\n    </CardHeader>\r\n    <CardBody>\r\n      <Form inline>\r\n        <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n          <Input type=\"text\" name=\"name\" placeholder=\"Jane Doe\" />\r\n        </FormGroup>\r\n        <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n          <InputGroup>\r\n            <InputGroupAddon addonType=\"prepend\">@</InputGroupAddon>\r\n            <Input placeholder=\"username\" />\r\n          </InputGroup>\r\n        </FormGroup>\r\n        <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n          <CustomInput\r\n            type=\"checkbox\"\r\n            id=\"checkbox\"\r\n            label=\"Remember me\"\r\n            disabled\r\n          />\r\n        </FormGroup>\r\n        <Button color=\"primary\">Submit</Button>\r\n      </Form>\r\n    </CardBody>\r\n  </Card>\r\n);\r\n\r\nconst Layouts = () => (\r\n  <Container fluid className=\"p-0\">\r\n    <h1 className=\"h3 mb-3\">Form Layouts</h1>\r\n\r\n    <Row>\r\n      <Col lg=\"6\">\r\n        <BasicForm />\r\n      </Col>\r\n      <Col lg=\"6\">\r\n        <HorizontalForm />\r\n      </Col>\r\n      <Col lg=\"12\">\r\n        <FormRow />\r\n        <InlineForm />\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default Layouts;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'small',\n  color: 'muted'\n};\n\nvar FormText = function FormText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      inline = props.inline,\n      color = props.color,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"inline\", \"color\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, !inline ? 'form-text' : false, color ? \"text-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormText.propTypes = propTypes;\nFormText.defaultProps = defaultProps;\nexport default FormText;"],"sourceRoot":""}